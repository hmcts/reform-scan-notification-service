server:
  port: 8585

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info

spring:
  application:
    name: Reform Scan Notification Service
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_CONN_OPTIONS}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: NotificationHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000

flyway:
  skip-migrations: ${FLYWAY_SKIP_MIGRATIONS}

queue:
  notifications:
    access-key: ${QUEUE_READ_ACCESS_KEY}
    access-key-name: ${QUEUE_ACCESS_KEY_LISTEN_NAME}
    name: "notifications"
    namespace: ${QUEUE_NAMESPACE}
    read-connection-string: ${QUEUE_NOTIFICATIONS_READ}
    max-delivery-count: ${QUEUE_NOTIFICATIONS_MAX_RETRY}

scheduling:
  lock_at_most_for: PT10M # 10 minutes in ISO-8601
  task:
    notifications-consume:
      delay: ${NOTIFICATIONS_CONSUME_TASK_DELAY_IN_MS} # in ms
      enabled: ${NOTIFICATIONS_CONSUME_TASK_ENABLED}
    pending-notifications:
      delay: ${PENDING_NOTIFICATIONS_TASK_DELAY_IN_MS}
      enabled: ${PENDING_NOTIFICATIONS_TASK_ENABLED}
      send-delay-in-minute: ${PENDING_NOTIFICATIONS_SEND_DELAY_IN_MINUTE}

# clients region

idam:
  s2s-auth:
    url: ${S2S_URL}

# end of clients region
