package uk.gov.hmcts.reform.notificationservice.model.out;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.swagger.v3.oas.annotations.media.Schema;
import uk.gov.hmcts.reform.notificationservice.util.CustomInstantSerializer;

import java.time.Instant;

public class NotificationInfo {

    @JsonProperty("id")
    @Schema(title = "Notification internal ID", name = "id", description = "Autogenerated DB ID")
    public final String id;

    @JsonProperty("confirmation_id")
    @Schema(title = "Notification external ID", name = "confirmation_id", description = "ID received from third party")
    public final String confirmationId;

    @JsonProperty("zip_file_name")
    @Schema(title = "Zip file name", name = "zip_file_name")
    public final String zipFileName;

    @JsonProperty("po_box")
    @Schema(title = "PO box", name = "po_box")
    public final String poBox;

    @JsonProperty("container")
    @Schema(title = "Origin of zip_file_name", name = "container", description = "Container origin of zip_file_name")
    public final String container;

    @JsonProperty("service")
    @Schema(title = "File name representing service", name = "service")
    public final String service;

    @JsonProperty("document_control_number")
    @Schema(
        title = "Related DCN number",
        name = "document_control_number",
        description = "Related DNC number (if applicable)"
    )
    public final String documentControlNumber;

    @JsonProperty("error_code")
    @Schema(title = "Error code", name = "error_code", description = "Agreed error code")
    public final String errorCode;

    @JsonProperty("error_description")
    @Schema(title = "Error description", name = "error_description", description = "Error description")
    public final String errorDescription;

    @JsonSerialize(using = CustomInstantSerializer.class)
    @JsonProperty("created_at")
    @Schema(title = "Created at", name = "created_at", description = "Time when notification was created")
    public final Instant createdAt;

    @JsonSerialize(using = CustomInstantSerializer.class)
    @JsonProperty("processed_at")
    @Schema(
        title = "Processed at",
        name = "processed_at",
        description = "Time when notification was persisted to third party"
    )
    public final Instant processedAt;

    @JsonProperty("status")
    @Schema(title = "End state", name = "status", description = "Current end state of the notification")
    public final String status;

    public NotificationInfo(
        long id,
        String confirmationId,
        String zipFileName,
        String poBox,
        String container,
        String service,
        String documentControlNumber,
        String errorCode,
        String errorDescription,
        Instant createdAt,
        Instant processedAt,
        String status
    ) {
        this.id = String.valueOf(id);
        this.confirmationId = confirmationId;
        this.zipFileName = zipFileName;
        this.poBox = poBox;
        this.container = container;
        this.service = service;
        this.documentControlNumber = documentControlNumber;
        this.errorCode = errorCode;
        this.errorDescription = errorDescription;
        this.createdAt = createdAt;
        this.processedAt = processedAt;
        this.status = status;
    }
}
